@startuml

title __OBSERVER's Class Diagram__\n

  namespace org.example {
    namespace behavioral.observer {
      class org.example.behavioral.observer.Car {
          + update()
      }
    }
  }
  

  namespace org.example {
    namespace behavioral.observer {
      class org.example.behavioral.observer.MessagePublisher {
          - observers : List<Observer>
          + attach()
          + dettach()
          + notifyUpdate()
      }
    }
  }
  

  namespace org.example {
    namespace behavioral.observer {
      interface org.example.behavioral.observer.Observer {
          {abstract} + update()
      }
    }
  }
  

  namespace org.example {
    namespace behavioral.observer {
      class org.example.behavioral.observer.Semaphore {
          + Semaphore()
          + getStatus()
      }
    }
  }
  

  namespace org.example {
    namespace behavioral.observer {
      enum States {
        CAR_RED
        GREEN_RED
      }
    }
  }
  

  namespace org.example {
    namespace behavioral.observer {
      interface org.example.behavioral.observer.Subject {
          {abstract} + attach()
          {abstract} + dettach()
          {abstract} + notifyUpdate()
      }
    }
  }
  

  namespace org.example {
    namespace behavioral.observer {
      class org.example.behavioral.observer.Walker {
          + update()
      }
    }
  }
  

  org.example.behavioral.observer.Car .up.|> org.example.behavioral.observer.Observer
  org.example.behavioral.observer.MessagePublisher .up.|> org.example.behavioral.observer.Subject
  org.example.behavioral.observer.Semaphore o-- org.example.behavioral.observer.States : status
  org.example.behavioral.observer.Walker .up.|> org.example.behavioral.observer.Observer


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
